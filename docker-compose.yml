#version: '3'

services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6380:6379"  # Redis'in varsayılan portu
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    restart: always
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5673:5672"  # RabbitMQ için mesaj kuyruğu portu
      - "15673:15672"  # RabbitMQ yönetim paneli portu
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    restart: always
  web:
    container_name: marswide_backend
    image: marswide_backend
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    restart: always
    env_file:
      - .env
  celery:
    build:
      context: .
    container_name: celery
    command: celery -A core worker -l INFO
    depends_on:
      - rabbitmq
    volumes:
      - .:/app
    restart: always
  celery-beat:
    image: marswide_backend:latest  # Django uygulamanın image adı
    container_name: celery_beat
    command: celery -A core beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - rabbitmq
      - web
    volumes:
      - .:/app
    restart: always
  db:
    image: postgres:16
    container_name: postgres_db
    volumes:
      #- ./pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"
    restart: always
    env_file:
      - .env
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./staticfiles:/staticfiles
      - ./nginx/certificates:/etc/ssl/certs
      - /etc/letsencrypt:/etc/letsencrypt:ro
    environment:
      - NGINX_SERVER_NAME_1=marswide.com
      - NGINX_SERVER_NAME_2=www.marswide.com
      - NGINX_PROXY_PASS=http://marswide_backend:8000
      - NGINX_SSL_CERTIFICATE=/etc/letsencrypt/live/marswide.com/fullchain.pem
      - NGINX_SSL_CERTIFICATE_KEY=/etc/letsencrypt/live/marswide.com/privkey.pem
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    restart: always
volumes:
  postgres_data:
  redis_data: